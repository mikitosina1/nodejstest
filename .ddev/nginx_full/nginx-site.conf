server {
    listen 80 default_server;
    listen 443 ssl default_server;

    root /var/www/html/src;

    ssl_certificate /etc/ssl/certs/master.crt;
    ssl_certificate_key /etc/ssl/certs/master.key;

    include /etc/nginx/monitoring.conf;

    index index.js;

    sendfile off;
    error_log /dev/stdout info;
    access_log /var/log/nginx/access.log;

    location / {
        absolute_redirect off;

        # prox requests to Node.js
        proxy_pass http://127.0.0.1:3000; # Node.js
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # try to return files if exists Node.js
        try_files $uri $uri/ /index.js;
    }

    # Убираем PHP конфигурацию, так как она нам не нужна
    # Для чисто Node.js проекта не нужны PHP блоки
    # location ~ \.php$ {
    #     try_files $uri =404;
    #     fastcgi_split_path_info ^(.+\.php)(/.+)$;
    #     fastcgi_pass unix:/run/php-fpm.sock;
    #     fastcgi_buffers 16 16k;
    #     fastcgi_buffer_size 32k;
    #     fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    #     fastcgi_param SCRIPT_NAME $fastcgi_script_name;
    #     fastcgi_index index.php;
    #     include fastcgi_params;
    #     fastcgi_intercept_errors off;
    #     fastcgi_read_timeout 10m;
    #     fastcgi_param SERVER_NAME $host;
    #     fastcgi_param HTTPS $fcgi_https;
    # }

    # hidden files defend
    location ~* /\.(?!well-known\/) {
        deny all;
    }

    location ~* (?:\.(?:bak|conf|dist|fla|in[ci]|log|psd|sh|sql|sw[op])|~)$ {
        deny all;
    }

    include /etc/nginx/common.d/*.conf;
    include /mnt/ddev_config/nginx/*.conf;
}
